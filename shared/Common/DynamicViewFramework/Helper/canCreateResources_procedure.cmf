<?xml version="1.1" encoding="UTF-8"?>
<metadata name="canCreateResources" path="/shared/Common/DynamicViewFramework/Helper/canCreateResources" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <parameters>
    <parameter name="name" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="formatLayerPath" direction="IN" nullable="true">
      <datatype name="ResourcePath" referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
    </parameter>
    <parameter name="businessLayerPath" direction="IN" nullable="true">
      <datatype name="ResourcePath" referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
    </parameter>
    <parameter name="appLayerPath" direction="IN" nullable="true">
      <datatype name="ResourcePath" referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
    </parameter>
    <parameter name="publishPath" direction="IN" nullable="true">
      <datatype name="ResourcePath" referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="result" type="TABLE" refId="1">
        <element name="state">
          <datatype name="TINYINT" type="INTEGER" minValue="-128" maxValue="127"/>
        </element>
        <element name="msg">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ EXECUTE"/>
  </security>
  <dependency target="/lib/resource/ResourceDefs" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/lib/resource/ResourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="path" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="type" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="version" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceVersion" type="STRING" maxLength="255"/>
      </element>
      <element name="exists" direction="OUT">
        <datatype type="BOOLEAN"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* canCreateResources:
    For a newly introspected table, check if corresponding resources exist.
 
	Input:
   	 	name: 					View name corresponding to an introspected table
		formatLayerPath:		Path to formatting layer folder
		businessLayerPath:		Path to business layer folder
		appLayerPath:			Path to application layer folder
		publishPath:			Fully qualified path to the schema in publish area

	Output:
		N/A

	Author:      Venky Madireddi
	Date:        11/19/2014
	CIS Version: 6.2.6
*/
PROCEDURE canCreateResources
(
	IN	name					VARCHAR(255),
	IN	formatLayerPath			/lib/resource/ResourceDefs.ResourcePath,
	IN	businessLayerPath		/lib/resource/ResourceDefs.ResourcePath,
	IN	appLayerPath			/lib/resource/ResourceDefs.ResourcePath,
	IN	publishPath				/lib/resource/ResourceDefs.ResourcePath,
	OUT result					PIPE
								(
									state	TINYINT,
									msg		VARCHAR(255)
								)
)
BEGIN
	DECLARE Resource_Exists BOOLEAN;
	CALL /lib/resource/ResourceExists(formatLayerPath||&apos;/&apos;||name, &apos;TABLE&apos;, null, Resource_Exists);
	IF (Resource_Exists) THEN
		INSERT INTO result(state, msg) VALUES (0, &apos;Formatting Layer&apos;); 
	END IF;
	IF (NOT Resource_Exists) THEN
		CALL /lib/resource/ResourceExists(businessLayerPath||&apos;/&apos;||name, &apos;TABLE&apos;, null, Resource_Exists);
		IF (Resource_Exists) THEN
			INSERT INTO result(state, msg) VALUES (0, &apos;Business Layer&apos;); 
		END IF;
	END IF;
	IF (NOT Resource_Exists) THEN
		CALL /lib/resource/ResourceExists(appLayerPath||&apos;/&apos;||name, &apos;TABLE&apos;, null, Resource_Exists);
		IF (Resource_Exists) THEN
			INSERT INTO result(state, msg) VALUES (0, &apos;Application Layer&apos;); 
		END IF;
	END IF;
	IF (NOT Resource_Exists) THEN
		CALL /lib/resource/ResourceExists(publishPath||&apos;/&apos;||name, &apos;LINK&apos;, null, Resource_Exists);
		IF (Resource_Exists) THEN
			INSERT INTO result(state, msg) VALUES (0, &apos;Schema&apos;); 
		END IF;
	END IF;
	IF (NOT Resource_Exists) THEN
		INSERT INTO result(state) VALUES (1); 
	END IF;
END</attribute>
  <attribute name="creationDate" type="LONG">1416424949944</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1495575019437</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>