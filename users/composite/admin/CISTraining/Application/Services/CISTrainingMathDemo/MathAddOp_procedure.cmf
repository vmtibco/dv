<?xml version="1.1" encoding="UTF-8"?>
<metadata name="MathAddOp" path="/users/composite/admin/CISTraining/Application/Services/CISTrainingMathDemo/MathAddOp" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation/>
  <parameters>
    <parameter name="MathAddOpRequest" direction="IN" nullable="true">
      <datatype name="MathAddOpRequest" namespace="http://www.cisco.com/cis/basictraining/MathDemoService" referenceDefinitionSet="/users/composite/admin/CISTraining/Application/DefinitionSets/MathDemo" referenceType="{http://www.cisco.com/cis/basictraining/MathDemoService}MathAddOpRequest" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.cisco.com/cis/basictraining/MathDemoService}MathAddOpRequest">
        <schemaDatatype>
          <datatype name="MathAddOpRequest" namespace="http://www.cisco.com/cis/basictraining/MathDemoService" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="ELEMENT_DECL" anonymous="true" type="TREE" refId="1">
            <element name="ipAddInt1" namespace="http://www.cisco.com/cis/basictraining/MathDemoService">
              <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
            </element>
            <element name="ipAddInt2" namespace="http://www.cisco.com/cis/basictraining/MathDemoService">
              <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
            </element>
          </datatype>
        </schemaDatatype>
      </datatype>
    </parameter>
    <parameter name="MathAddOpResponse" direction="OUT" nullable="true">
      <datatype name="MathAddOpResponse" namespace="http://www.cisco.com/cis/basictraining/MathDemoService" referenceDefinitionSet="/users/composite/admin/CISTraining/Application/DefinitionSets/MathDemo" referenceType="{http://www.cisco.com/cis/basictraining/MathDemoService}MathAddOpResponse" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.cisco.com/cis/basictraining/MathDemoService}MathAddOpResponse">
        <schemaDatatype>
          <datatype name="MathAddOpResponse" namespace="http://www.cisco.com/cis/basictraining/MathDemoService" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="ELEMENT_DECL" anonymous="true" type="TREE" refId="1">
            <element name="AddInt" namespace="http://www.cisco.com/cis/basictraining/MathDemoService">
              <datatype superTypeName="integer" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="2">
                <element name="inTerm1" category="1">
                  <datatype name="integer" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="decimal" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="DECIMAL" maxDigits="32" maxFractionalDigits="0"/>
                </element>
                <element name="interm2" category="1">
                  <datatype name="integer" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="decimal" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="DECIMAL" maxDigits="32" maxFractionalDigits="0"/>
                </element>
                <element name="value" namespace="http://www.cisco.com/cis/basictraining/MathDemoService" category="5">
                  <datatype name="integer" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="decimal" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="DECIMAL" maxDigits="32" maxFractionalDigits="0"/>
                </element>
              </datatype>
            </element>
          </datatype>
        </schemaDatatype>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/users/composite/admin/CISTraining/Application/DefinitionSets/MathDemo" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/users/composite/admin/CISTraining/Business/Business/MathDemoOperations/AddOperation" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="pInt1" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="pInt2" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="result" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="2"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">PROCEDURE MathAddOp (
    IN MathAddOpRequest /users/composite/admin/CISTraining/Application/DefinitionSets/MathDemo.&quot;{http://www.cisco.com/cis/basictraining/MathDemoService}MathAddOpRequest&quot;,
    OUT MathAddOpResponse /users/composite/admin/CISTraining/Application/DefinitionSets/MathDemo.&quot;{http://www.cisco.com/cis/basictraining/MathDemoService}MathAddOpResponse&quot;
)BEGIN
DECLARE pAddInt1 INTEGER DEFAULT 0; 
	DECLARE pAddInt2 INTEGER DEFAULT 0;
 
	DECLARE pAddStr1 VARCHAR;
	DECLARE pAddStr2 VARCHAR;

	DECLARE pAddResult INTEGER;

	SET pAddStr1 = CAST((XPATH(MathAddOpRequest,&apos;//*[namespace-uri()=&quot;http://www.cisco.com/cis/basictraining/MathDemoService&quot; and local-name()=&quot;ipAddInt1&quot;]/text()&apos;)) AS VARCHAR);
	SET pAddStr2 = CAST((XPATH(MathAddOpRequest,&apos;//*[namespace-uri()=&quot;http://www.cisco.com/cis/basictraining/MathDemoService&quot; and local-name()=&quot;ipAddInt2&quot;]/text()&apos;)) AS VARCHAR);

	IF pAddStr1 IS NOT NULL THEN
		SET pAddInt1 = CAST(pAddStr1 AS INTEGER);
	END IF;

	IF pAddStr2 IS NOT NULL THEN
		SET pAddInt2 = CAST(pAddStr2 AS INTEGER);
	END IF;

	CALL /users/composite/admin/CISTraining/Business/Business/MathDemoOperations/AddOperation(pAddInt1, pAddInt2, MathAddOpResponse);
END</attribute>
  <attribute name="creationDate" type="LONG">1431454893028</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserId" type="INTEGER">-1973</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">true</attribute>
  <attribute name="lastModifiedDate" type="LONG">1431455413019</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">-1973</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1431454893028</attribute>
</metadata>